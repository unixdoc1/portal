pipeline {
    agent any
    
    parameters {
        string(name: 'PARAM1', description: 'Parameter 1 for Staff pipeline')
        string(name: 'PARAM2', description: 'Parameter 2 for Staff pipeline')
        string(name: 'PARAM3', description: 'Parameter 3 for Cust pipeline')
        string(name: 'PARAM4', description: 'Parameter 4 for Cust pipeline')
        
        choice(
            name: 'PIPELINE_CHOICE',
            description: 'Select which pipeline(s) to trigger',
            choices: ['Staff', 'Cust', 'Both']
        )
    }
    
    stages {
        stage('Trigger Pipelines') {
            steps {
                script {
                    def staffParams = [
                        string(name: 'PARAM1', value: params.PARAM1),
                        string(name: 'PARAM2', value: params.PARAM2)
                    ]
                    
                    def custParams = [
                        string(name: 'PARAM3', value: params.PARAM3),
                        string(name: 'PARAM4', value: params.PARAM4)
                    ]
                    
                    switch(params.PIPELINE_CHOICE) {
                        case 'Staff':
                            build job: 'Staff', parameters: staffParams
                            break
                        case 'Cust':
                            build job: 'Cust', parameters: custParams
                            break
                        case 'Both':
                            parallel {
                                stage('Trigger Staff') {
                                    steps {
                                        build job: 'Staff', parameters: staffParams
                                    }
                                }
                                stage('Trigger Cust') {
                                    steps {
                                        build job: 'Cust', parameters: custParams
                                    }
                                }
                            }
                            break
                    }
                }
            }
        }
    }
}
