pipeline {
    agent any
    
    parameters {
        string(name: 'EAPI_BRANCH', description: 'EAPI branch name')
        string(name: 'REACT_BRANCH', description: 'React branch name')
        string(name: 'ReleaseConfigId', description: 'Release configuration ID')
        string(name: 'logicalEnvironment', description: 'Logical environment name')
        string(name: 'target_environment', description: 'Target environment name')
        
        choice(
            name: 'PIPELINE_SELECTION',
            description: 'Select which pipeline(s) to trigger',
            choices: ['Staff', 'Cust', 'Both'],
            defaultValue: 'Both'
        )
    }
    
    stages {
        stage('Trigger Selected Pipelines') {
            steps {
                script {
                    // Parameters for Staff pipeline
                    def staffParams = [
                        string(name: 'EAPI_BRANCH', value: params.EAPI_BRANCH)
                    ]
                    
                    // Parameters for Cust pipeline
                    def custParams = [
                        string(name: 'EAPI_BRANCH', value: params.EAPI_BRANCH),
                        string(name: 'ReleaseConfigId', value: params.ReleaseConfigId),
                        string(name: 'target_environment', value: params.target_environment)
                    ]
                    
                    switch(params.PIPELINE_SELECTION.toUpperCase()) {
                        case 'STAFF':
                            echo "Triggering Staff pipeline with parameters: ${staffParams}"
                            build job: 'Staff', parameters: staffParams, wait: false
                            break
                            
                        case 'CUST':
                            echo "Triggering Cust pipeline with parameters: ${custParams}"
                            build job: 'Cust', parameters: custParams, wait: false
                            break
                            
                        case 'BOTH':
                            parallel {
                                stage('Trigger Staff Pipeline') {
                                    steps {
                                        echo "Triggering Staff pipeline with parameters: ${staffParams}"
                                        build job: 'Staff', parameters: staffParams, wait: false
                                    }
                                }
                                stage('Trigger Cust Pipeline') {
                                    steps {
                                        echo "Triggering Cust pipeline with parameters: ${custParams}"
                                        build job: 'Cust', parameters: custParams, wait: false
                                    }
                                }
                            }
                            break
                            
                        default:
                            error("Invalid pipeline selection: ${params.PIPELINE_SELECTION}")
                    }
                }
            }
        }
    }
    
    post {
        always {
            echo "Pipeline execution completed for selection: ${params.PIPELINE_SELECTION}"
        }
    }
}
